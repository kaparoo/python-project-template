# ========================== #
#      Project Metadata      #
# ========================== #

[project]
name = "PROJECT_NAME"  # FIX HERE
version = "0.1.0"
description = "PROJECT_DESCRIPTION"  # FIX HERE
readme = "README.md"
requires-python = ">=3.12.9"  # FIX HERE
license = "MIT"
authors = [
    { name = "Jaewoo Park", email = "kaparoo2001@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    # See https://pypi.org/classifiers/ for more classifiers
]
keywords = []  # FIX HERE
dependencies = []  # FIX HERE

[project.urls]
GitHub = "https://www.github.com/kaparoo/REPOSITORY"  # FIX HERE

# ========================== #
#      [tool.*] Sections     #
# ========================== #

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "ruff>=0.11.4",
]

[tool.mypy]
cache_dir = "./.cache/mypy"
exclude = ["tests/"]
pretty = true
show_error_codes = true
show_column_numbers = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true
allow_redefinition = true
no_implicit_optional = true
# plugins = ["numpy.typing.mypy_plugin"]  # Uncomment if using numpy
# See the following documentation for more information
# https://mypy.readthedocs.io/en/stable/config_file.html
# https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml

[tool.pytest.ini_options]
cache_dir = "./.cache/pytest"
testpaths = ["tests/"]
# See the following documentation for more information
# https://docs.pytest.org/en/latest/reference/customize.html#pyproject-toml
# https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref

[tool.ruff]
cache-dir = "./.cache/ruff"
extend-exclude = [".cache", ".venv*", ".vscode", "tests"]
# See the following documentation for more information
# https://docs.astral.sh/ruff/configuration/
# https://docs.astral.sh/ruff/settings/
# https://docs.astral.sh/ruff/rules/

[tool.ruff.lint]
extend-select = [
    "I",     # isort
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "PIE",   # flake8-pie
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PGH",   # pygrep-hooks
    "PL",    # Pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "PERF",  # Perflint
    "RUF",   # Ruff-specific rules
]
ignore = [
    "PLR0904",  # too-many-public-methods
    "PLR0911",  # too-many-return-statements
    "PLR0912",  # too-many-branches
    "PLR0913",  # too-many-arguments
    "PLR0915",  # too-many-statements
    "PLR0916",  # too-many-boolean-expressions
    "PLR2004",  # magic-value-comparison
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = true
mypy-init-return = true
suppress-dummy-args = true
suppress-none-returning = true

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.isort]
known-first-party = ["project"]  # FIX HERE

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydoclint]
ignore-one-line-docstrings = true  # Skip docstrings which fit on a single line.

# Following fields are omitted and use default values (ruff v0.11.4)
# - tool.ruff.analyze
# - tool.ruff.format
# - tool.ruff.lint.flake8-bandit
# - tool.ruff.lint.flake8-boolean-trap
# - tool.ruff.lint.flake8-bugbear
# - tool.ruff.lint.flake8-builtins
# - tool.ruff.lint.flake8-comprehensions
# - tool.ruff.lint.flake8-copyright
# - tool.ruff.lint.flake8-errmsg
# - tool.ruff.lint.flake8-gettext
# - tool.ruff.lint.flake8-implicit-str-concat
# - tool.ruff.lint.flake8-import-conventions
# - tool.ruff.lint.flake8-pytest-style
# - tool.ruff.lint.flake8-quotes
# - tool.ruff.lint.flake8-self
# - tool.ruff.lint.flake8-tidy-imports
# - tool.ruff.lint.mccabe
# - tool.ruff.lint.pep8-naming
# - tool.ruff.lint.pyflakes
# - tool.ruff.lint.pylint
# - tool.ruff.lint.pydocstyle
# - tool.ruff.lint.pyupgrade
# - tool.ruff.lint.ruff